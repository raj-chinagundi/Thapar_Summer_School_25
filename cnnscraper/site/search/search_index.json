{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CNN News Scraper Documentation","text":""},{"location":"#description","title":"Description","text":"<p>CNN News Scraper is a Python application that allows you to scrape news articles from CNN's website. It provides an easy way to collect and analyze news data from CNN.</p> <p>This documentation provides detailed information on how to install, run, and understand the project.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>To get started quickly, follow these steps:</p> <ol> <li>Installation: Ensure you have Python installed, then install dependencies:     <pre><code>pip install -r requirement.txt\n</code></pre></li> <li>Run the Scraper:     <pre><code>python cnnscraper.py\n</code></pre>     The script will prompt you to select dates for news articles.</li> </ol> <p>See the Getting Started section for more details.</p>"},{"location":"installation/","title":"Installation","text":"<p>This project requires Python 3.x.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>The project dependencies are listed in <code>requirement.txt</code>.</p> <p>To install them, navigate to the project root directory in your terminal and run:</p> <pre><code>pip install -r requirement.txt\n</code></pre> <p>This will install: - <code>beautifulsoup4</code>: For parsing HTML and XML documents. - <code>requests</code>: For making HTTP requests. - <code>regex</code>: A regular expression module for more advanced pattern matching.</p> <p>Virtual Environment Recommended</p> <p>It is highly recommended to use a virtual environment to manage project dependencies to avoid conflicts with other Python projects. <pre><code># Create a virtual environment\npython -m venv .venv\n# Activate the virtual environment\nsource .venv/bin/activate # On Windows: .venv\\Scripts\\activate\n# Install dependencies within the active environment\npip install -r requirement.txt\n</code></pre> Remember to activate the environment each time you work on the project.</p>"},{"location":"usage/","title":"Usage","text":"<p>The <code>cnnscraper.py</code> script provides a straightforward way to collect news data from CNN.</p>"},{"location":"usage/#data-output","title":"Data Output","text":"<p>After successfully running the script, two main outputs are generated in your project's root directory:</p> <ol> <li> <p><code>data.csv</code>: A CSV file containing the scraped news article information.     Each row in <code>data.csv</code> includes the following columns:</p> <ul> <li><code>news_headline</code>: The main headline of the news article.</li> <li><code>news_content</code>: The full text content of the article's paragraphs.</li> <li><code>img_description</code>: The alternative text (description) of an associated image (usually the first found).</li> <li><code>img_link</code>: The original URL of the associated image.</li> <li><code>local_path</code>: The local path where the image is saved (e.g., <code>article_images/image_name.jpg</code>).</li> </ul> </li> <li> <p><code>article_images/</code> directory: This folder is created to store all downloaded images associated with the scraped articles. Images are named based on their original filenames (sanitized) and saved as <code>.jpg</code>.</p> </li> </ol>"},{"location":"usage/#dataset-example","title":"Dataset Example","text":"<p>A snippet of the generated <code>data.csv</code> file:</p> <p></p>"},{"location":"usage/#script-interaction","title":"Script Interaction","text":"<p>When you run <code>cnnscraper.py</code>, you will be prompted to interact with the script:</p> <p><pre><code>Available Dates:\n1. February 01, 2023\n2. March 15, 2023\n...\nChoose one date at a time where you want to get news for from the available options(eg 1, 2, 3):\n</code></pre> Enter the number corresponding to the date you wish to scrape. After selecting, you'll be asked: <pre><code>Do you want to select more dates? (yes/no):\n</code></pre> Type <code>yes</code> to select another date or <code>no</code> to proceed with scraping for the currently selected dates.</p>"},{"location":"usage/#error-handling","title":"Error Handling","text":"<ul> <li>If an image fails to download, an error message will be printed to the console, but the script will continue.</li> <li>If the <code>data.csv</code> file already exists from a previous run, it will be automatically overwritten to ensure fresh data.</li> </ul>"}]}